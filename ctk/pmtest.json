{"info":{"_postman_id":"d6cfcc97-74e3-4be7-8697-4f3d2bc22263","name":"CTK-Party-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/Individual","event":[{"listen":"test","script":{"id":"57f6177f-bc4b-4e12-827e-cd5211b6e021","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","pm.globals.set('FAMILYNAMEIN01', instance['familyName']);","pm.globals.set('GIVENNAMEIN01', instance['givenName']);","pm.globals.set('HREFIN01', instance['href']);","pm.globals.set('IDIN01', instance['id']);","","pm.test('Body includes value held on familyName', function () {","  pm.expect(pm.response.text()).to.include(instance['familyName']);","});","pm.test('Body includes value held on givenName', function () {","  pm.expect(pm.response.text()).to.include(instance['givenName']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual","description":"This operation creates a Individual"},"response":[]},{"name":"/Individual","event":[{"listen":"test","script":{"id":"3606c600-3f60-43ac-bddf-2c9e2ca5802c","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","pm.globals.set('FAMILYNAMEIN02', instance['familyName']);","pm.globals.set('GIVENNAMEIN02', instance['givenName']);","pm.globals.set('HREFIN02', instance['href']);","pm.globals.set('IDIN02', instance['id']);","","pm.test('Body includes value held on familyName', function () {","  pm.expect(pm.response.text()).to.include(instance['familyName']);","});","pm.test('Body includes value held on givenName', function () {","  pm.expect(pm.response.text()).to.include(instance['givenName']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual","description":"This operation creates another Individual"},"response":[]},{"name":"/Individual","event":[{"listen":"test","script":{"id":"1fe8351b-9556-43f2-9665-7498e09bdb96","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}individual","description":"This operation search for the created Individual"},"response":[]},{"name":"/Individual/{{IDIN01}}","event":[{"listen":"test","script":{"id":"3da89dbe-5da0-49d3-82c1-aa8a23b98570","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}individual/{{IDIN01}}","description":"This operation search for one of the created Individual"},"response":[]},{"name":"/Individual/{{IDIN02}}","event":[{"listen":"test","script":{"id":"f679019b-a8de-4bd1-b9a2-3c408b7798ba","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}individual/{{IDIN02}}","description":"This operation search for the other one of the created Individual"},"response":[]}],"_postman_isSubFolder":true},{"name":"N2","item":[{"name":"/Individual?fields=familyName","event":[{"listen":"test","script":{"id":"6707cddc-5a39-450e-b9e7-726b1a665ccd","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?fields=familyName","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?familyName={{FAMILYNAMEIN01}}","event":[{"listen":"test","script":{"id":"40b3e55b-3411-422f-8c83-a08ff92c2488","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?familyName={{FAMILYNAMEIN01}}","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?familyName={{FAMILYNAMEIN02}}","event":[{"listen":"test","script":{"id":"c7ba3ed8-d6f4-475c-9e27-3cac427e2f7c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?familyName={{FAMILYNAMEIN02}}","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?fields=givenName","event":[{"listen":"test","script":{"id":"54e55c5e-dc2e-4b25-a041-0be4bf16f378","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?fields=givenName","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?givenName={{GIVENNAMEIN01}}","event":[{"listen":"test","script":{"id":"07843db3-d5cb-45e1-a46e-308c101e401a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?givenName={{GIVENNAMEIN01}}","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?givenName={{GIVENNAMEIN02}}","event":[{"listen":"test","script":{"id":"fc4b5962-07f0-41fa-aa9c-fa2a2f424fa1","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?givenName={{GIVENNAMEIN02}}","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?fields=href","event":[{"listen":"test","script":{"id":"0fdcd9fb-4af9-476d-a76b-36c1792b23be","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?fields=href","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?href={{HREFIN01}}","event":[{"listen":"test","script":{"id":"a99da248-7e6e-48de-bd83-2cda331b2d3e","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?href={{HREFIN01}}","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?href={{HREFIN02}}","event":[{"listen":"test","script":{"id":"1fbe3e6a-1ac1-40be-b53b-160d101757ee","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?href={{HREFIN02}}","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?fields=id","event":[{"listen":"test","script":{"id":"04faf715-6f4b-4bf9-96b0-2099158a3076","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?fields=id","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?id={{IDIN01}}","event":[{"listen":"test","script":{"id":"530e3e12-5f6f-4cff-b36c-3e016231b446","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN01\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN01');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN01\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN01');});","            pm.test('href is ' + pm.globals.get(\"HREFIN01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN01');});","            pm.test('id is ' + pm.globals.get(\"IDIN01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN01');});","        }","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('IDIN02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?id={{IDIN01}}","description":"This operation filter a Individual"},"response":[]},{"name":"/Individual?id={{IDIN02}}","event":[{"listen":"test","script":{"id":"0f8f9985-5edc-4ccc-9e67-2da855390b7e","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['familyName', 'givenName', 'href', 'id'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has familyName attribute', function() { pm.expect(instance[\"familyName\"]).to.be.a('string'); });","        pm.test('Response has givenName attribute', function() { pm.expect(instance[\"givenName\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on familyName', function () {","            pm.expect(pm.response.text()).to.include(instance['familyName']);","        });","        pm.test('Body includes value held on givenName', function () {","            pm.expect(pm.response.text()).to.include(instance['givenName']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDIN02\")) {","            pm.test('familyName is ' + pm.globals.get(\"FAMILYNAMEIN02\"), function() {pm.expect(instance['familyName']) == pm.globals.get('FAMILYNAMEIN02');});","            pm.test('givenName is ' + pm.globals.get(\"GIVENNAMEIN02\"), function() {pm.expect(instance['givenName']) == pm.globals.get('GIVENNAMEIN02');});","            pm.test('href is ' + pm.globals.get(\"HREFIN02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFIN02');});","            pm.test('id is ' + pm.globals.get(\"IDIN02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDIN02');});","        }","        if (instance.id == pm.globals.get(\"IDIN01\")) {","            pm.test('IDIN01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"familyName\": \"Lamborgizzia\",\n  \"givenName\": \"Jane\"\n}"},"url":"{{Party}}individual?id={{IDIN02}}","description":"This operation filter a Individual"},"response":[]}],"_postman_isSubFolder":true},{"name":"E1","item":[{"name":"/Individual/404ID","event":[{"listen":"test","script":{"id":"66b98f3e-e3e2-4745-aa92-8dd5c3c7b2ae","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}individual/5ffaf1d2-ea2a-49fc-a47b-e93a95182a97","description":"This operation search for one of the created Individual"},"response":[]}],"_postman_isSubFolder":true},{"name":"N1","item":[{"name":"/Organization","event":[{"listen":"test","script":{"id":"15b47bee-d293-4249-bd44-a5f3467d438a","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'tradingName'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","","pm.globals.set('HREFOR01', instance['href']);","pm.globals.set('IDOR01', instance['id']);","pm.globals.set('TRADINGNAMEOR01', instance['tradingName']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on tradingName', function () {","  pm.expect(pm.response.text()).to.include(instance['tradingName']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization","description":"This operation creates a Organization"},"response":[]},{"name":"/Organization","event":[{"listen":"test","script":{"id":"3dce744a-e7f0-45f0-899c-2b8c331041d1","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'tradingName'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","","pm.globals.set('HREFOR02', instance['href']);","pm.globals.set('IDOR02', instance['id']);","pm.globals.set('TRADINGNAMEOR02', instance['tradingName']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on tradingName', function () {","  pm.expect(pm.response.text()).to.include(instance['tradingName']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization","description":"This operation creates another Organization"},"response":[]},{"name":"/Organization","event":[{"listen":"test","script":{"id":"6cd49e81-ec1d-4f84-8579-80adcd96fd07","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}organization","description":"This operation search for the created Organization"},"response":[]},{"name":"/Organization/{{IDOR01}}","event":[{"listen":"test","script":{"id":"fd96f789-e217-488f-9813-28b07f9d17a2","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}organization/{{IDOR01}}","description":"This operation search for one of the created Organization"},"response":[]},{"name":"/Organization/{{IDOR02}}","event":[{"listen":"test","script":{"id":"545978bf-13a7-4c08-9146-e782f1106f0c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}organization/{{IDOR02}}","description":"This operation search for the other one of the created Organization"},"response":[]}],"_postman_isSubFolder":true},{"name":"N2","item":[{"name":"/Organization?fields=href","event":[{"listen":"test","script":{"id":"41182c8e-69a4-4aa3-bc11-2b9e91e0accc","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?fields=href","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?href={{HREFOR01}}","event":[{"listen":"test","script":{"id":"a2b4a4dd-edbc-4b06-8e29-885e8f50e0da","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?href={{HREFOR01}}","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?href={{HREFOR02}}","event":[{"listen":"test","script":{"id":"8b82fa2f-cfda-47e7-b967-3910d1dd80ff","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?href={{HREFOR02}}","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?fields=id","event":[{"listen":"test","script":{"id":"c5505874-a7e4-4b91-bc46-62c6ac7a720f","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?fields=id","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?id={{IDOR01}}","event":[{"listen":"test","script":{"id":"3674d9ae-0c44-4c85-ab8f-6e693924269d","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?id={{IDOR01}}","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?id={{IDOR02}}","event":[{"listen":"test","script":{"id":"f328d30a-1b6e-4b74-aeb0-a48bd7ac5977","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?id={{IDOR02}}","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?fields=tradingName","event":[{"listen":"test","script":{"id":"4174933e-0bbc-478e-8d86-12ff6f3e5bf2","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?fields=tradingName","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?tradingName={{TRADINGNAMEOR01}}","event":[{"listen":"test","script":{"id":"e0c4e54e-a02f-45bc-84be-6d574285b2f1","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR01');});","            pm.test('id is ' + pm.globals.get(\"IDOR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR01');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR01\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR01');});","        }","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('IDOR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?tradingName={{TRADINGNAMEOR01}}","description":"This operation filter a Organization"},"response":[]},{"name":"/Organization?tradingName={{TRADINGNAMEOR02}}","event":[{"listen":"test","script":{"id":"17b52e2a-38ed-42cd-ab81-3879f4a01a4c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'tradingName'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has tradingName attribute', function() { pm.expect(instance[\"tradingName\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on tradingName', function () {","            pm.expect(pm.response.text()).to.include(instance['tradingName']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDOR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFOR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFOR02');});","            pm.test('id is ' + pm.globals.get(\"IDOR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDOR02');});","            pm.test('tradingName is ' + pm.globals.get(\"TRADINGNAMEOR02\"), function() {pm.expect(instance['tradingName']) == pm.globals.get('TRADINGNAMEOR02');});","        }","        if (instance.id == pm.globals.get(\"IDOR01\")) {","            pm.test('IDOR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"tradingName\": \"Coffee Do Brazil Fair Trade\"\n}"},"url":"{{Party}}organization?tradingName={{TRADINGNAMEOR02}}","description":"This operation filter a Organization"},"response":[]}],"_postman_isSubFolder":true},{"name":"E1","item":[{"name":"/Organization/404ID","event":[{"listen":"test","script":{"id":"3b4a9c29-927c-4204-b911-f121daf6463a","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":""},"url":"{{Party}}organization/933929cd-1761-44f5-96e7-e6e138d17b94","description":"This operation search for one of the created Organization"},"response":[]}],"_postman_isSubFolder":true}]}